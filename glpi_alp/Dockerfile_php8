FROM alpine:3.17
MAINTAINER gri.daniel@gmail.com
LABEL my_name="daniel grigore"
LABEL my_youtube="https://www.youtube.com/@routerologyblog1111"

# Apache and PHP on Alpine Linux

# Start with installing some generic tools that can help us with troubleshooting
# We also need to install apache and the apache php module.

RUN apk update && \
	apk add \
	apache2 \
	apache2-utils \
	php81-apache2 \
	php81-enchant \
	php81-soap \
	php81-openssl \
	php81-pecl-redis \
	php81-posix \
	php81-dba \
	php81-bz2 \
	php81-pecl-mongodb \
	php81-mysqli \
	php81-common \
	php81-pdo_mysql \
	php81-cgi \
	php81-fileinfo \
	php81-shmop \
	php81-xsl \
	php81-curl \
	php81-session \
	php81-pecl-imagick \
	php81-sodium \
	php81-pecl-memcache \
	php81-pspell \
	php81-sockets \
	php81-mbstring \
	php81-intl \
	php81-xml \
	php81-zip \
	php81-pgsql \
	php81-simplexml \
	php81-imap \
	php81-pecl-ssh2 \
	php81-tidy \
	php81-pdo_sqlite \
	php81-calendar \
	php81-sqlite3 \
	php81-pecl-memcached \
	php81-xmlreader \
	php81-gettext \
	php81-snmp \
	php81-bcmath \
	php81-gd \
	php81-ldap \
	php81-pecl-uuid \
	php81-pecl-yaml \
	php81-xmlwriter \
	php81-dom \
	php81-exif \
	php81-phar \
	php81-opcache \
	php81-iconv \
	php81-ctype \
	&& rm -rf /var/lib/apt/lists/*
# USER 33

# Add the following extra tools only if you need them
# The same goes for the apache2-ssl also

#RUN apk update && \
#	apk add \
#	net-tools \
#	vim \
#	tcpdump \
#	ca-certificates \
#	iproute2 \
#	wget \
#	apache2-ssl \
# 	&& rm -rf /var/lib/apt/lists/* 

# If we are using SSL, the we might need to add our ca to the trusted ssl chain
#COPY ssl/*.crt /usr/local/share/ca-certificates
#RUN update-ca-certificates

# Set the correct timezone

ENV TZ="Europe/Bucharest"

# We can copy the site content straight into the container but that's not a good practice.
# I put this here just for demo purpose
# A better way would be to mount it as a volume at container start
# COPY www/ /var/www/localhost/htdocs

# The configuration files for PHP and HTTPD do not hurt to be copied into the container
# but they can be very well overriden by mounting them at container start

# COPY php_ini/php.ini $PHP_INI_DIR/php.ini
# COPY httpd_conf/httpd.conf /etc/apache2/httpd.conf

# The PID on this container is root/1, but the httpd workers/subprocesses are started with 100:101
# So if any files are to be created by the app inside, they will have that ownership

EXPOSE 80/tcp

ENTRYPOINT ["httpd","-DFOREGROUND"]

